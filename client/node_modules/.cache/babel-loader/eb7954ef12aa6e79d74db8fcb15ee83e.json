{"ast":null,"code":"import _classCallCheck from \"C:\\\\Projects\\\\React\\\\cfn-coming-soon\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\React\\\\cfn-coming-soon\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Projects\\\\React\\\\cfn-coming-soon\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Projects\\\\React\\\\cfn-coming-soon\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Projects\\\\React\\\\cfn-coming-soon\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Projects\\\\React\\\\cfn-coming-soon\\\\client\\\\src\\\\components\\\\Subscribe.js\";\nimport React, { Component } from \"react\";\nimport \"../css/Subscribe.css\";\n\nvar Subscribe =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Subscribe, _Component);\n\n  function Subscribe() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Subscribe);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Subscribe)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: \"\"\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        email: e.target.value.trim()\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.state.email) {\n        fetch(\"/api/memberAdd?email=\".concat(_this.state.email)).then(function (message) {\n          return message.json();\n        }).then(function (json) {\n          if (json.status === \"subscribed\") {\n            _this.props.configureToast('success');\n          } else if (json.title === \"Member Exists\") {\n            _this.props.configureToast('warning');\n          } else {\n            _this.props.configureToast('danger');\n          }\n\n          _this.props.showToast();\n        }).catch(function (err) {\n          console.log(\"error\", err);\n        });\n\n        _this.props.changeLogoSpeed();\n\n        _this.setState({\n          email: \"\"\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Subscribe, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          placeholder = _this$props.placeholder,\n          buttonText = _this$props.buttonText;\n      return React.createElement(\"form\", {\n        className: \"subscribe\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"subscribe-email\",\n        name: \"email\",\n        type: \"email\",\n        placeholder: placeholder,\n        onChange: this.handleChange,\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"subscribe-button\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, buttonText));\n    }\n  }]);\n\n  return Subscribe;\n}(Component);\n\nexport default Subscribe;","map":{"version":3,"sources":["C:\\Projects\\React\\cfn-coming-soon\\client\\src\\components\\Subscribe.js"],"names":["React","Component","Subscribe","state","email","handleChange","e","setState","target","value","trim","handleSubmit","preventDefault","fetch","then","message","json","status","props","configureToast","title","showToast","catch","err","console","log","changeLogoSpeed","placeholder","buttonText"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sBAAP;;IAEMC,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;UAIRC,Y,GAAe,UAAAC,CAAC,EAAI;AAClB,YAAKC,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAEE,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,IAAf;AAAT,OAAd;AACD,K;;UAEDC,Y,GAAe,UAAAL,CAAC,EAAI;AAClBA,MAAAA,CAAC,CAACM,cAAF;;AAEA,UAAI,MAAKT,KAAL,CAAWC,KAAf,EAAsB;AACpBS,QAAAA,KAAK,gCAAyB,MAAKV,KAAL,CAAWC,KAApC,EAAL,CACGU,IADH,CACQ,UAAAC,OAAO,EAAI;AACf,iBAAOA,OAAO,CAACC,IAAR,EAAP;AACD,SAHH,EAIGF,IAJH,CAIQ,UAAAE,IAAI,EAAI;AACZ,cAAIA,IAAI,CAACC,MAAL,KAAgB,YAApB,EAAkC;AAChC,kBAAKC,KAAL,CAAWC,cAAX,CAA0B,SAA1B;AACD,WAFD,MAEO,IAAIH,IAAI,CAACI,KAAL,KAAe,eAAnB,EAAoC;AACzC,kBAAKF,KAAL,CAAWC,cAAX,CAA0B,SAA1B;AACD,WAFM,MAEA;AACL,kBAAKD,KAAL,CAAWC,cAAX,CAA0B,QAA1B;AACD;;AACD,gBAAKD,KAAL,CAAWG,SAAX;AACD,SAbH,EAcGC,KAdH,CAcS,UAAAC,GAAG,EAAI;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACD,SAhBH;;AAkBA,cAAKL,KAAL,CAAWQ,eAAX;;AAEA,cAAKnB,QAAL,CAAc;AAAEH,UAAAA,KAAK,EAAE;AAAT,SAAd;AACD;AACF,K;;;;;;;6BAEQ;AAAA,wBAC6B,KAAKc,KADlC;AAAA,UACCS,WADD,eACCA,WADD;AAAA,UACcC,UADd,eACcA,UADd;AAGP,aACE;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,QAAQ,EAAE,KAAKjB,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,WAAW,EAAEgB,WAJf;AAKE,QAAA,QAAQ,EAAE,KAAKtB,YALjB;AAME,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,KANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASE;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAqC,QAAA,IAAI,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGwB,UADH,CATF,CADF;AAeD;;;;EAvDqB3B,S;;AA0DxB,eAAeC,SAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../css/Subscribe.css\";\r\n\r\nclass Subscribe extends Component {\r\n  state = {\r\n    email: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ email: e.target.value.trim() });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.email) {\r\n      fetch(`/api/memberAdd?email=${this.state.email}`)\r\n        .then(message => {\r\n          return message.json();\r\n        })\r\n        .then(json => {\r\n          if (json.status === \"subscribed\") {\r\n            this.props.configureToast('success');\r\n          } else if (json.title === \"Member Exists\") {\r\n            this.props.configureToast('warning');\r\n          } else {\r\n            this.props.configureToast('danger')\r\n          }\r\n          this.props.showToast();\r\n        })\r\n        .catch(err => {\r\n          console.log(\"error\", err);\r\n        });\r\n\r\n      this.props.changeLogoSpeed();\r\n\r\n      this.setState({ email: \"\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { placeholder, buttonText } = this.props;\r\n\r\n    return (\r\n      <form className=\"subscribe\" onSubmit={this.handleSubmit}>\r\n        <input\r\n          className=\"subscribe-email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder={placeholder}\r\n          onChange={this.handleChange}\r\n          value={this.state.email}\r\n        />\r\n        <button className=\"subscribe-button\" type=\"submit\">\r\n          {buttonText}\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Subscribe;\r\n"]},"metadata":{},"sourceType":"module"}