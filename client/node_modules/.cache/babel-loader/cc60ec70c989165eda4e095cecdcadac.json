{"ast":null,"code":"import _classCallCheck from \"C:\\\\Projects\\\\React\\\\cfn-coming-soon\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\React\\\\cfn-coming-soon\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Projects\\\\React\\\\cfn-coming-soon\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Projects\\\\React\\\\cfn-coming-soon\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Projects\\\\React\\\\cfn-coming-soon\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Projects\\\\React\\\\cfn-coming-soon\\\\src\\\\components\\\\Subscribe.js\";\nimport React, { Component } from \"react\";\nimport \"../css/Subscribe.css\";\n\nvar Subscribe =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Subscribe, _Component);\n\n  function Subscribe() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Subscribe);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Subscribe)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: \"\"\n    };\n\n    _this.onChange = function (e) {\n      _this.setState({\n        email: e.target.value\n      });\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.state.email) {\n        var authString = 'anystring:14c91474ac03379d33f674ed8d7eb59d';\n        var headers = new Headers();\n        headers.set('Authorization', 'Basic ' + btoa(authString));\n        fetch('https://us20.api.mailchimp.com/3.0/lists/fb3a49a977/members/', {\n          credentials: 'include',\n          mode: 'no-cors',\n          method: 'POST',\n          headers: headers,\n          body: JSON.stringify({\n            email_address: _this.state.email,\n            status: 'subscribed'\n          })\n        }).then(function (data) {\n          return console.log(data);\n        }).catch(function (error) {\n          return console.log(\"Error: \".concat(error));\n        });\n\n        _this.setState({\n          email: \"\"\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Subscribe, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          placeholder = _this$props.placeholder,\n          buttonText = _this$props.buttonText;\n      return React.createElement(\"form\", {\n        className: \"subscribe\",\n        onSubmit: function onSubmit(e) {\n          return _this2.onSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"subscribe-email\",\n        name: \"email\",\n        type: \"email\",\n        placeholder: placeholder,\n        onChange: function onChange(e) {\n          return _this2.onChange(e);\n        },\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"subscribe-button\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, buttonText));\n    }\n  }]);\n\n  return Subscribe;\n}(Component);\n\nexport default Subscribe;","map":{"version":3,"sources":["C:\\Projects\\React\\cfn-coming-soon\\src\\components\\Subscribe.js"],"names":["React","Component","Subscribe","state","email","onChange","e","setState","target","value","onSubmit","preventDefault","authString","headers","Headers","set","btoa","fetch","credentials","mode","method","body","JSON","stringify","email_address","status","then","data","console","log","catch","error","props","placeholder","buttonText"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sBAAP;;IAEMC,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;UAIRC,Q,GAAW,UAAAC,CAAC,EAAI;AACd,YAAKC,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAEE,CAAC,CAACE,MAAF,CAASC;AAAlB,OAAd;AACD,K;;UAEDC,Q,GAAW,UAAAJ,CAAC,EAAI;AACdA,MAAAA,CAAC,CAACK,cAAF;;AAEA,UAAI,MAAKR,KAAL,CAAWC,KAAf,EAAsB;AACpB,YAAMQ,UAAU,GAAG,4CAAnB;AACA,YAAIC,OAAO,GAAG,IAAIC,OAAJ,EAAd;AACAD,QAAAA,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA6B,WAAWC,IAAI,CAACJ,UAAD,CAA5C;AACAK,QAAAA,KAAK,CAAC,8DAAD,EAAiE;AACpEC,UAAAA,WAAW,EAAE,SADuD;AAEpEC,UAAAA,IAAI,EAAE,SAF8D;AAGpEC,UAAAA,MAAM,EAAE,MAH4D;AAIpEP,UAAAA,OAAO,EAAEA,OAJ2D;AAKpEQ,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,YAAAA,aAAa,EAAE,MAAKrB,KAAL,CAAWC,KADP;AAEnBqB,YAAAA,MAAM,EAAE;AAFW,WAAf;AAL8D,SAAjE,CAAL,CASGC,IATH,CASQ,UAAAC,IAAI;AAAA,iBAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAJ;AAAA,SATZ,EASmCG,KATnC,CASyC,UAAAC,KAAK;AAAA,iBAAIH,OAAO,CAACC,GAAR,kBAAsBE,KAAtB,EAAJ;AAAA,SAT9C;;AAWA,cAAKxB,QAAL,CAAc;AAAEH,UAAAA,KAAK,EAAE;AAAT,SAAd;AACD;AACF,K;;;;;;;6BAEQ;AAAA;;AAAA,wBAC6B,KAAK4B,KADlC;AAAA,UACCC,WADD,eACCA,WADD;AAAA,UACcC,UADd,eACcA,UADd;AAGP,aACE;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,QAAQ,EAAE,kBAAA5B,CAAC;AAAA,iBAAI,MAAI,CAACI,QAAL,CAAcJ,CAAd,CAAJ;AAAA,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,WAAW,EAAE2B,WAJf;AAKE,QAAA,QAAQ,EAAE,kBAAA3B,CAAC;AAAA,iBAAI,MAAI,CAACD,QAAL,CAAcC,CAAd,CAAJ;AAAA,SALb;AAME,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,KANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASE;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAqC,QAAA,IAAI,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG8B,UADH,CATF,CADF;AAeD;;;;EAjDqBjC,S;;AAoDxB,eAAeC,SAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../css/Subscribe.css\";\r\n\r\nclass Subscribe extends Component {\r\n  state = {\r\n    email: \"\"\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ email: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.email) {\r\n      const authString = 'anystring:14c91474ac03379d33f674ed8d7eb59d';\r\n      let headers = new Headers();\r\n      headers.set('Authorization', 'Basic ' + btoa(authString));\r\n      fetch('https://us20.api.mailchimp.com/3.0/lists/fb3a49a977/members/', {\r\n        credentials: 'include',\r\n        mode: 'no-cors',\r\n        method: 'POST',\r\n        headers: headers,\r\n        body: JSON.stringify({\r\n          email_address: this.state.email,\r\n          status: 'subscribed'\r\n        })\r\n      }).then(data => console.log(data)).catch(error => console.log(`Error: ${error}`));\r\n\r\n      this.setState({ email: \"\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { placeholder, buttonText } = this.props;\r\n\r\n    return (\r\n      <form className=\"subscribe\" onSubmit={e => this.onSubmit(e)}>\r\n        <input\r\n          className=\"subscribe-email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder={placeholder}\r\n          onChange={e => this.onChange(e)}\r\n          value={this.state.email}\r\n        />\r\n        <button className=\"subscribe-button\" type=\"submit\">\r\n          {buttonText}\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Subscribe;\r\n"]},"metadata":{},"sourceType":"module"}