{"ast":null,"code":"import _classCallCheck from \"C:\\\\Projects\\\\React\\\\cfn-coming-soon\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\React\\\\cfn-coming-soon\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Projects\\\\React\\\\cfn-coming-soon\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Projects\\\\React\\\\cfn-coming-soon\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Projects\\\\React\\\\cfn-coming-soon\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Projects\\\\React\\\\cfn-coming-soon\\\\src\\\\components\\\\Countdown.js\";\nimport React, { Component } from \"react\";\nimport Moment from \"react-moment\";\n\nvar Countdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Countdown, _Component);\n\n  function Countdown() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Countdown);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Countdown)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n    return _this;\n  }\n\n  _createClass(Countdown, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var deployDate = new Date(this.props.deployDate);\n      setInterval(function () {\n        var remainder;\n        var today = new Date();\n        var dateDiff = deployDate.getTime() / 1000 - today.getTime() / 1000;\n        var days = Math.floor(dateDiff / 86400);\n        remainder = dateDiff % 86400;\n        var hours = Math.floor(remainder / 3600);\n        remainder = remainder % 3600;\n        var minutes = Math.floor(remainder / 60);\n        var seconds = Math.floor(remainder % 60);\n\n        _this2.setState({\n          days: days,\n          hours: hours,\n          minutes: minutes,\n          seconds: seconds\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"countdown-clock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, Object.values(this.state).filter(function (value) {\n        return value !== 0;\n      }).length === 0 ? React.createElement(\"div\", {\n        className: \"loading-countdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.props.loadingMessage) : Object.keys(this.state).map(function (key, i) {\n        return React.createElement(\"div\", {\n          key: i,\n          className: \"countdown-clock-segment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, key.toUpperCase(), \":\"), _this3.state[key]);\n      }));\n    }\n  }]);\n\n  return Countdown;\n}(Component);\n\nexport default Countdown;","map":{"version":3,"sources":["C:\\Projects\\React\\cfn-coming-soon\\src\\components\\Countdown.js"],"names":["React","Component","Moment","Countdown","state","days","hours","minutes","seconds","deployDate","Date","props","setInterval","remainder","today","dateDiff","getTime","Math","floor","setState","Object","values","filter","value","length","loadingMessage","keys","map","key","i","toUpperCase"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;IAEMC,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,OAAO,EAAE,CAHH;AAINC,MAAAA,OAAO,EAAE;AAJH,K;;;;;;wCAOY;AAAA;;AAClB,UAAMC,UAAU,GAAG,IAAIC,IAAJ,CAAS,KAAKC,KAAL,CAAWF,UAApB,CAAnB;AACAG,MAAAA,WAAW,CAAC,YAAM;AAChB,YAAIC,SAAJ;AACA,YAAIC,KAAK,GAAG,IAAIJ,IAAJ,EAAZ;AACA,YAAIK,QAAQ,GAAGN,UAAU,CAACO,OAAX,KAAuB,IAAvB,GAA8BF,KAAK,CAACE,OAAN,KAAkB,IAA/D;AACA,YAAIX,IAAI,GAAGY,IAAI,CAACC,KAAL,CAAWH,QAAQ,GAAG,KAAtB,CAAX;AACAF,QAAAA,SAAS,GAAGE,QAAQ,GAAG,KAAvB;AACA,YAAIT,KAAK,GAAGW,IAAI,CAACC,KAAL,CAAWL,SAAS,GAAG,IAAvB,CAAZ;AACAA,QAAAA,SAAS,GAAGA,SAAS,GAAG,IAAxB;AACA,YAAIN,OAAO,GAAGU,IAAI,CAACC,KAAL,CAAWL,SAAS,GAAG,EAAvB,CAAd;AACA,YAAIL,OAAO,GAAGS,IAAI,CAACC,KAAL,CAAWL,SAAS,GAAG,EAAvB,CAAd;;AACA,QAAA,MAAI,CAACM,QAAL,CAAc;AACZd,UAAAA,IAAI,EAAJA,IADY;AAEZC,UAAAA,KAAK,EAALA,KAFY;AAGZC,UAAAA,OAAO,EAAPA,OAHY;AAIZC,UAAAA,OAAO,EAAPA;AAJY,SAAd;AAMD,OAhBU,EAgBR,IAhBQ,CAAX;AAiBD;;;6BACQ;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGY,MAAM,CAACC,MAAP,CAAc,KAAKjB,KAAnB,EAA0BkB,MAA1B,CAAiC,UAAAC,KAAK;AAAA,eAAIA,KAAK,KAAK,CAAd;AAAA,OAAtC,EAAuDC,MAAvD,KAAkE,CAAlE,GACC;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoC,KAAKb,KAAL,CAAWc,cAA/C,CADD,GAGCL,MAAM,CAACM,IAAP,CAAY,KAAKtB,KAAjB,EAAwBuB,GAAxB,CAA4B,UAACC,GAAD,EAAMC,CAAN;AAAA,eAC1B;AAAK,UAAA,GAAG,EAAEA,CAAV;AAAa,UAAA,SAAS,EAAC,yBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAM,UAAA,SAAS,EAAED,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuBA,GAAG,CAACE,WAAJ,EAAvB,MADJ,EAEG,MAAI,CAAC1B,KAAL,CAAWwB,GAAX,CAFH,CAD0B;AAAA,OAA5B,CAJJ,CADF;AAcD;;;;EA3CqB3B,S;;AA8CxB,eAAeE,SAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Moment from \"react-moment\";\r\n\r\nclass Countdown extends Component {\r\n  state = {\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    const deployDate = new Date(this.props.deployDate);\r\n    setInterval(() => {\r\n      let remainder;\r\n      let today = new Date();\r\n      let dateDiff = deployDate.getTime() / 1000 - today.getTime() / 1000;\r\n      let days = Math.floor(dateDiff / 86400);\r\n      remainder = dateDiff % 86400;\r\n      let hours = Math.floor(remainder / 3600);\r\n      remainder = remainder % 3600;\r\n      let minutes = Math.floor(remainder / 60);\r\n      let seconds = Math.floor(remainder % 60);\r\n      this.setState({\r\n        days,\r\n        hours,\r\n        minutes,\r\n        seconds\r\n      });\r\n    }, 1000);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"countdown-clock\">\r\n        {Object.values(this.state).filter(value => value !== 0).length === 0 ? (\r\n          <div className=\"loading-countdown\">{this.props.loadingMessage}</div>\r\n        ) : (\r\n          Object.keys(this.state).map((key, i) => (\r\n            <div key={i} className=\"countdown-clock-segment\">\r\n                <span className={key}>{key.toUpperCase()}:</span>\r\n              {this.state[key]}\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Countdown;\r\n"]},"metadata":{},"sourceType":"module"}